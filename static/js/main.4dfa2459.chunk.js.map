{"version":3,"sources":["UI/Components/PokemonTable/PokemonTable.tsx","DAL/api.ts","BLL/mainReducer.ts","UI/Common/Pagination.tsx","UI/Common/Searchbar.tsx","UI/Common/SearchByTag.tsx","UI/App.tsx","reportWebVitals.ts","BLL/store.ts","index.tsx","UI/Common/Pagination.module.css"],"names":["useStyles","makeStyles","table","minWidth","PokemonTable","pokemons","loading","useSelector","state","main","classes","Grid","item","xs","sm","style","width","textAlign","fontWeight","letterSpacing","Container","TableContainer","component","Paper","overflowX","Table","className","TableHead","TableRow","TableCell","align","TableBody","map","e","photo","sprites","other","dream_world","front_default","types","type","name","scope","src","alt","PokeAPI","setPokemonList","page","limit","axios","get","then","res","data","setPokemon","pokemonName","fetch","setPokemonData","url","a","response","json","sortType","initialState","totalPage","pageCount","currentPage","setPokemonListAC","setLoading","setPokemonAC","pokemon","setCurrentPageAC","setTotalPagesAC","setSearchAC","setPokemonsTC","result","dispatch","promises","pok","Promise","all","setPokemonListTC","getState","count","results","searchPokemon","Pagination","totalItemCounts","pageSize","onPageChanged","portionSize","setPageCount","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","wrap","numbers","Button","arrow","onClick","filter","p","active","numb","selectWrap","selectSpan","select","onChange","value","React","Searchbar","onSearch","search","setSearch","Input","placeholder","target","length","variant","SearchByTag","useDispatch","Number","currentTarget","pokemonType","u","pokemonsType","App","totalCount","notFound","setNotFound","useEffect","onSearchTC","newPageCount","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4dfa2459.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Container, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@mui/material\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../BLL/store\";\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 200,\n    },\n});\n\ntype PokemonTableType = {\n    pokemons: any[]\n}\nexport const PokemonTable: React.FC<PokemonTableType> = ({pokemons}) => {\n    const loading = useSelector<AppRootStateType, boolean>(state => state.main.loading)\n    const classes = useStyles();\n\n    return (\n        <Grid item xs={12} sm={8} style={{width: '100%'}}>\n            {loading\n                ? <div style={{textAlign: 'center', fontWeight:300, letterSpacing: 1.4}}>Loading...</div>\n                : <Container>\n                    <TableContainer component={Paper} style={{overflowX: 'hidden'}}>\n                        <Table className={classes.table} aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell align=\"center\"><b>Name</b></TableCell>\n                                    <TableCell align=\"center\"><b>Photo</b></TableCell>\n                                    <TableCell align=\"center\"><b>Type</b></TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {pokemons.map(e => {\n                                    const photo = e.sprites.other.dream_world.front_default\n\n                                    return (\n                                        <TableRow key={e.name} className={`thumb-container ${e.types[0].type.name}`}>\n                                            <TableCell align=\"center\" scope='row'>{e.name}</TableCell>\n                                            <TableCell align=\"center\">\n                                                {photo\n                                                    ? <img src={photo} alt={e.name}/>\n                                                    : <div className={'emptyPhoto'}>Фото отсуствует</div>\n                                                }\n                                            </TableCell>\n                                            <TableCell align=\"center\">\n                                                <small>{e.types[0].type.name}</small>\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Container>\n            }\n        </Grid>\n    );\n}\n","import axios from \"axios\";\r\n\r\nexport type resultApi ={\r\n    name: string,\r\n    url: string\r\n}\r\ntype ApiType = {\r\n    count: number\r\n    next: string\r\n    previous: null\r\n    results: Array<resultApi>\r\n}\r\n\r\nexport const PokeAPI = {\r\n    setPokemonList(page:number, limit: number){\r\n        return axios.get<ApiType>(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${page}.`).then(res=> res.data)\r\n    },\r\n    setPokemon(pokemonName: string){\r\n        return fetch (`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\r\n    },\r\n    setPokemonData: async (url: string)=>{\r\n        try {\r\n            const response = await fetch(url)\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        catch (err){}\r\n    },\r\n    sortType(type: number){\r\n        return fetch (`https://pokeapi.co/api/v2/type/${type}`)\r\n    },\r\n}\r\n\r\n\r\n","import {PokeAPI, resultApi} from \"../DAL/api\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\nexport type InitialStateType = {\r\n    pokemons: Array<any>,\r\n    loading: boolean,\r\n    totalPage: number,\r\n    pageCount: number,\r\n    currentPage: number,\r\n    limit: number,\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    pokemons: [] as Array<any>,\r\n    loading: false,\r\n    totalPage: 0,\r\n    pageCount: 0,\r\n    currentPage: 2,\r\n    limit: 10,\r\n}\r\n\r\nconst setPokemonListAC = (page: number, limit: number) => ({type: 'SET_POKEMON_LIST', page, limit} as const)\r\nconst setLoading = (loading: boolean) => ({type: 'SET_LOADING', loading} as const)\r\nexport const setPokemonAC = (pokemon: any[]) => ({type: 'SET_POKEMON', pokemon} as const)\r\nexport const removeOldPokemonAC = () => ({type: 'REMOVE_OLD_POKEMON', } as const)\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: \"SET_CURRENT_PAGE\", currentPage} as const)\r\nexport const setTotalPagesAC = (totalPage: number) => ({type: \"SET_TOTAL_COUNT\", totalPage} as const)\r\nexport const setPageCountAC = (newPageCount: number) => ({type: 'SET-PAGE-COUNT', newPageCount} as const)\r\nexport const setSearchAC = (pokemon: any) => ({type: 'SET-SEARCH', pokemon} as const)\r\n\r\ntype ActionType = ReturnType<typeof setPokemonListAC> | ReturnType<typeof setPokemonAC>\r\n    | ReturnType<typeof setTotalPagesAC> | ReturnType<typeof setCurrentPageAC> | ReturnType<typeof removeOldPokemonAC>\r\n    | ReturnType<typeof setPageCountAC> | ReturnType<typeof setSearchAC> | ReturnType<typeof setLoading>\r\n\r\nexport const mainReducer = (state = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case 'SET-PAGE-COUNT':\r\n            return {...state, limit: action.newPageCount}\r\n        case \"SET_LOADING\":\r\n            return {...state, loading: action.loading}\r\n        case 'SET_POKEMON_LIST':\r\n            return {...state, page: action.page, limit: action.limit}\r\n        case \"SET_POKEMON\":\r\n            return {...state, pokemons:  action.pokemon}\r\n        case \"SET-SEARCH\":\r\n            return {...state, pokemons: action.pokemon}\r\n        case 'REMOVE_OLD_POKEMON':\r\n            return {...state, pokemons: []}\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET_TOTAL_COUNT\":\r\n            return {...state, totalPage: action.totalPage}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPokemonsTC = (result: resultApi[]) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setLoading(true))\r\n        const promises = result.map(async (pok) => {\r\n            return await PokeAPI.setPokemonData(pok.url)\r\n        })\r\n        const pokemons = await Promise.all(promises)\r\n        dispatch(setPokemonAC(pokemons))\r\n        dispatch(setLoading(false))\r\n    }\r\n}\r\n\r\nexport const setPokemonListTC = () => {\r\n    return async (dispatch: any,  getState: () => AppRootStateType) => {\r\n        const state = getState().main\r\n        const page = state.currentPage\r\n        const limit = state.limit\r\n\r\n        const data = await PokeAPI.setPokemonList(page, limit).then(data => data)\r\n        dispatch(setPokemonListAC(page, limit))\r\n        dispatch(setTotalPagesAC(data.count))\r\n        dispatch(setCurrentPageAC(page))\r\n        dispatch(removeOldPokemonAC())\r\n        dispatch(setPokemonsTC(data.results))\r\n    }\r\n}\r\n\r\nexport const searchPokemon = async (pokemon: string) => {\r\n    try {\r\n        const response = await PokeAPI.setPokemon(pokemon);\r\n        return await response.json();\r\n    } catch (err) {}\r\n};\r\n\r\nexport const onSearchTC = (pokemon: string | null,setNotFound:(value: boolean)=>void)=>{\r\n    return async (dispatch: any)=>{\r\n    try {\r\n        dispatch(setLoading(true))\r\n        if (!pokemon) {\r\n            return dispatch(setPokemonListTC())\r\n        }\r\n        setNotFound(false);\r\n        const result = await searchPokemon(pokemon);\r\n        if (!result) {\r\n            setNotFound(true);\r\n            return;\r\n        } else {\r\n            dispatch(setSearchAC([result]))\r\n            dispatch(setCurrentPageAC(0))\r\n            dispatch(setTotalPagesAC(0))\r\n        }\r\n        dispatch(setLoading(false))\r\n    }catch (err) {}\r\n}};\r\n\r\n\r\nexport const sortPokemonTag =(type: number)=>{\r\n    return async (dispatch: any)=>{\r\n        try {\r\n            dispatch(setLoading(true))\r\n            const response = await PokeAPI.sortType(type).then(res => res)\r\n            const pokemonType = await response.json()\r\n            const promises = pokemonType.pokemon.map((pok: any) => {\r\n                return ({...pok['pokemon']})\r\n            }).map(async (u: any) => {\r\n                return await PokeAPI.setPokemonData(u.url)\r\n            })\r\n            const pokemonsType = await Promise.all(promises)\r\n            dispatch(setPokemonAC(pokemonsType))\r\n            dispatch(setCurrentPageAC(0))\r\n            dispatch(setTotalPagesAC(0))\r\n            dispatch(setLoading(false))\r\n        }catch (err){}\r\n    }\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\nimport {Button} from \"@mui/material\";\nimport style from './Pagination.module.css'\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\ntype PaginationPropsType = {\n    pageSize: number\n    portionSize?: number\n    totalItemCounts: number\n    currentPage: number\n    onPageChanged: (pageNumber: number) => void\n    setPageCount: (e: ChangeEvent<HTMLSelectElement>) => void\n}\n\nexport const Pagination: React.FC<PaginationPropsType> = ({\n                                                              totalItemCounts,\n                                                              pageSize,\n                                                              onPageChanged,\n                                                              currentPage = 1,\n                                                              portionSize = 10,\n                                                              setPageCount\n                                                          }) => {\n    let pagesCount = Math.ceil(totalItemCounts / pageSize)\n\n    let pages: Array<number> = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n    return (\n        <div className={style.wrap}>\n            <div className={style.numbers}>\n                {portionNumber > 1 &&\n                    <Button className={style.arrow} onClick={() => {\n                        setPortionNumber(portionNumber - 1)\n                    }}><ArrowLeftIcon/></Button>}\n                {pages\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map((p) => {\n                        return <Button key={p}\n                                       className={currentPage === p ? style.active : style.numb}\n                                       onClick={() => {\n                                           onPageChanged(p)\n                                       }}>{p}</Button>\n                    })}\n                {portionCount > portionNumber &&\n                    <Button onClick={() => {\n                        setPortionNumber(portionNumber + 1)\n                    }}><ArrowRightIcon/></Button>}\n            </div>\n            {totalItemCounts > 10\n                ? <div className={style.selectWrap}>\n                    <span className={style.selectSpan}>Show</span>\n                    <select className={style.select} onChange={setPageCount}>\n                        <option value={10}>10</option>\n                        <option value={20}>20</option>\n                        <option value={50}>50</option>\n                    </select>\n                    <span className={style.selectSpan}>Pokemons</span>\n                </div> : ''}\n        </div>\n    );\n}\n\n","import {Button} from \"@material-ui/core\";\r\nimport {Input} from \"@mui/material\";\r\nimport './Searchbar.css'\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\nconst { useState } = React;\r\n\r\ninterface ISearchbarProps{\r\n    onSearch:(pokemon: string | null) => void\r\n}\r\n\r\nexport const Searchbar = ({onSearch}:ISearchbarProps) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n        if (e.target.value.length === 0) {\r\n            onSearch(null);\r\n        }\r\n    };\r\n\r\n    const onClick = async () => {\r\n        onSearch(search);\r\n    };\r\n\r\n    return (\r\n        <div className=\"searchbar-container\">\r\n            <div className=\"searchbar\">\r\n                <Input placeholder=\"Search pokemon...\" onChange={onChange} />\r\n            </div>\r\n            <div>\r\n                <Button variant={\"outlined\"} onClick={onClick}>Search</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import './Searchbar.css'\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {sortPokemonTag} from \"../../BLL/mainReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const SearchByTag = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onSortTag = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch(sortPokemonTag(Number(e.currentTarget.value)))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='searchBlockTag'>\r\n                <span>Сортировка по типу: </span>\r\n                <select onChange={onSortTag}>\r\n                    <option value={1}>Normal</option>\r\n                    <option value={2}>Fighting</option>\r\n                    <option value={3}>Flying</option>\r\n                    <option value={4}>Poison</option>\r\n                    <option value={5}>Ground</option>\r\n                    <option value={6}>Rock</option>\r\n                    <option value={7}>Bug</option>\r\n                    <option value={8}>Ghost</option>\r\n                    <option value={9}>Steel</option>\r\n                    <option value={10}>Fire</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport {PokemonTable} from \"./Components/PokemonTable/PokemonTable\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../BLL/store\";\nimport {onSearchTC, setCurrentPageAC, setPageCountAC, setPokemonListTC} from \"../BLL/mainReducer\";\nimport {Pagination} from \"./Common/Pagination\";\nimport {Searchbar} from \"./Common/Searchbar\";\nimport {SearchByTag} from \"./Common/SearchByTag\";\n\nfunction App() {\n    const totalCount = useSelector<AppRootStateType, number>(state => state.main.totalPage)\n    const currentPage = useSelector<AppRootStateType, number>(state => state.main.currentPage)\n    const limit = useSelector<AppRootStateType, number>(state => state.main.limit)\n    const pokemons = useSelector<AppRootStateType, any[]>(state => state.main.pokemons)\n    const [notFound, setNotFound] = useState(false);\n    const dispatch = useDispatch()\n\n    const setPageCount = (e: ChangeEvent<HTMLSelectElement>) => {\n        dispatch(setPageCountAC(Number(e.currentTarget.value)))\n        dispatch(setPokemonListTC())\n    }\n\n    const onPageChanged = (pageNumber: number) => {\n        dispatch(setCurrentPageAC(pageNumber))\n        dispatch(setPokemonListTC())\n    }\n    useEffect(() => {\n        dispatch(setPokemonListTC())\n    }, [dispatch])\n\n    const onSearch = (pokemon: string | null) => {\n        dispatch(onSearchTC(pokemon, setNotFound))\n        setNotFound(false)\n    }\n\n    return (\n        <div className='AppContainer'>\n            <h2>Pokemon table</h2>\n            <div className='searchBlock'>\n                <Searchbar onSearch={onSearch}/>\n                <SearchByTag/>\n            </div>\n            {notFound ? (\n                <div className=\"not-found-text\">\n                    No se encontro el Pokemon que buscabas 😭\n                </div>\n            ) : (\n                <>\n                    <PokemonTable\n                        pokemons={pokemons}\n                    />\n                    <Pagination\n                        currentPage={currentPage}\n                        pageSize={limit}\n                        totalItemCounts={totalCount}\n                        setPageCount={setPageCount}\n                        onPageChanged={onPageChanged}\n                    />\n                </>\n            )}\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    main: mainReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './UI/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./BLL/store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Pagination_wrap__2WnCt\",\"selectWrap\":\"Pagination_selectWrap__ce218\",\"selectSpan\":\"Pagination_selectSpan__3u8gg\",\"select\":\"Pagination_select__1V1-o\"};"],"sourceRoot":""}